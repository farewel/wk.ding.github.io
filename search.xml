<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[机器学习基础]]></title>
    <url>%2F%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[1.基础概念 《机器学习》:简单而言，机器学习就是把无序的数据转换成有用的信息。 1.学习形式分类 监督学习(supervised learning) 监督学习即在机械学习过程中给出对错提示，从给定带有标签的训练集中训练出目标函数，主要应用于分类和预测（classify &amp; regression）。通常的算法包含回归分析和统计分类 非监督学习(unsupervised learning) 学习没有标签的数据集，比如在分析大量语句之后，训练出一个模型将较为接近的词分为一类，而后可以根据一个新的词在句子中的用法（和其他信息）将这个词分入某一类中。其中比较微妙的地方在于，这种问题下使用聚类（Clustering）（方法）所获得的簇（Cluster）（结果），有时候是无法人为地观察出其特征的，但是在得到聚类后，可能会对数据集有新的启发2.数据相关 用来进行机器学习的一个数据集往往会被分为两个数据集——训练数据（training data）和测试数据（testing data）。 顾名思义，训练数据在机器学习的过程中使用，目的是找出一套机器学习的方法；而测试数据用于判断找出的方法是否足够有效。 2.K-近邻算法]]></content>
      <categories>
        <category>learning</category>
      </categories>
      <tags>
        <tag>Meachine learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Quartz]]></title>
    <url>%2F20180725%2F</url>
    <content type="text"></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[线性回归、Logistic回归]]></title>
    <url>%2F20180721%2F</url>
    <content type="text"><![CDATA[1. 概念回归(Regression) 《机器学习》：假设现有一些数据点，我们用一条线去对这些点拟合，该线称为最佳拟合直线，这个拟合的过程为回归。 2.线性回归（Linear Regression）2.1 线性回归模型与解决方案例：训练集 房屋面积与价格的数据表，预测其他不同面积的房屋的价格？需要得到的结果是具体的数值。方案：将现有数据在图中标记后，拟合出一条合理的曲线（在这里是一条直线），然后用这条曲线预测新的房屋面积对应的价格。 h(Hypothesis) 假设函数如下:$$h_\theta(x) =\sum_{i=0}^nθ_ix_i=\theta^T x$$公式里的参数$\theta$和输入x都被视为向量，即$\theta^T$=[$\theta_0$ $\theta_1$ $\cdots$ $\theta_n$],$x$=$\begin{bmatrix} x_0\x_1\ \vdots\x_n \end{bmatrix}$ 对于给定的x ，f(x)与真实值Y可能具有差异，为表示拟合的好坏，用一个函数来度量拟合的程度：$$ J(\theta)=\frac{1}{2m}\sum_{i=1}^m(h_\theta(x^i)-y^i)^2 $$上式中$h_\theta$表示利用拟合出来的直线计算出的第i个数据的预测结果，y表示实际结果，直观的表达式理解为每个房屋的预测值与实际值之差的平方和。目标：得出$h_\theta(x)$的表达式；怎么画出直线由参数$\theta$决定；为使得$\theta$取值使得结果尽量准确则需$minJ(\theta)$ 2.2 最小二乘解法-梯度下降(Gradient descent)对于梯度下降，Ng在课上给的比喻：想象你正站在一个山坡上，你环顾四周，找到一个坡度最陡的方向，往那个方向走一步，然后再往坡度最陡的方向走出相同长度的一步，当你用同样的方式走了很多步的时候，你最终会到达一个最低点。注意点： 走到的不一定是整座山的最低点，可能只是个山洼，即局部最小； 由于步长的取值，可能会在最低点附近徘徊，注意调整步长； 未完]]></content>
      <categories>
        <category>learning</category>
      </categories>
      <tags>
        <tag>Meachine learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gitblit环境]]></title>
    <url>%2F20170721%2F</url>
    <content type="text"><![CDATA[Gitblit服务器环境搭配自己搭建一个GIT服务器，存放代码，准备如下： *服务器一台（先用的自己的） *配置java环境，下载地址[http://www.java.com/zh_CN/] *下载gitblit 地址：[http://www.gitblit.com/] java环境配置下载软件之后，一步步双击，完成后打开cmd界面，输入java回车，如下图，表示安装成。并没有去配置环境变量，已经自动配置 GitBlit配置下载之后创建一个文件夹存放GitBlit解压包，另一个为GitRepository 源代码 1.配置文件修改：data-&gt;gitblit.properties -&gt;include = defaults.properties 如果需要配置新的配置文件，可更换，否则不改动也可以 2.同级目录下找到defaults.properties 文件，打开之后，修改以下内容： *git.repositoriesFolder = C:/Person/Git/GitRepository（资料库及代码存放位置） *server.httpPort = 80 设置端口号 *server.storePassword = 123456 设置超级密码 *server.httpBindInterface =172.16.0.246 *server.httpsBindInterface =172.16.0.246 *server.certificateAlias = 172.16.0.246 先设置为自己的ip地址，局域网内可访问 3.保存后，返回上级目录，执行gitblit.cmd批处理命令，成功提示如下图，即可访问172.16.0.246 4.Gitblit设置以windows service 方式启动 *在根目录下找到installService.cmd，以记事本打开,添加SET CD = C:\Person\Git\GitBit *设置StartParams=“” 修改完成如下图： 至此，配置完成.]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
